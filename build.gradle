buildscript {
    ext.kotlin_version = '1.0.5'

    repositories {
        jcenter()
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M3'
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.3.4'
}

apply plugin: 'kotlin'
apply plugin: 'maven'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'jacoco'

scmVersion {
    tag {
        prefix = ''
    }
}

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

group = 'com.github.kotlinz.kotlinz'
project.version = scmVersion.version

repositories {
    jcenter()
    mavenCentral()
    maven { url "http://dl.bintray.com/jetbrains/spek" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    testCompile 'org.jetbrains.spek:spek-api:1.1.0-beta3'
    testCompile "com.winterbe:expekt:0.5.0"
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine:1.1.0-beta3'
}

project.afterEvaluate {
    def junitPlatformTestTask = project.tasks.getByName('junitPlatformTest')

    jacoco {
        // this tool version is compatible with
        toolVersion = "0.7.6.201602180812"
        applyTo junitPlatformTestTask
    }

    project.task(type: JacocoReport, "jacocoJunitPlatformTestReport",
            {
                sourceDirectories = files("./src/main")
                classDirectories = files("$buildDir/classes/main")
                executionData junitPlatformTestTask
                reports {
                    xml.enabled true
                    csv.enabled false
                    html.enabled true
                }
            })
}